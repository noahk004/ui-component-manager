generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  email         String   @unique
  password      String
  salt          String
  profileImage  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  components    Component[]
  likes         Like[]
  downloads     Download[]
}

model Component {
  id            Int       @id @default(autoincrement())
  title         String
  description   String
  codeSource    String
  isPrivate     Boolean
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  likes         Like[]
  downloads     Download[]
  componentTags ComponentTag[]

  user          User      @relation(fields: [userId], references: [id])
  userId        Int
}

model Like {
  createdAt     DateTime  @default(now())

  user          User      @relation(fields: [userId], references: [id])
  userId        Int
  component     Component @relation(fields: [componentId], references: [id])
  componentId   Int

  @@id([userId, componentId])
}

model Download {
  id            Int       @id @default(autoincrement())
  downloadedAt  DateTime  @default(now())

  user          User      @relation(fields: [userId], references: [id])
  userId        Int
  component     Component @relation(fields: [componentId], references: [id])
  componentId   Int
}

model Tag {
  id            Int       @id @default(autoincrement())
  name          String

  componentTags ComponentTag[]
}

model ComponentTag {
  component     Component @relation(fields: [componentId], references: [id])
  componentId   Int
  tag           Tag       @relation(fields: [tagId], references: [id])
  tagId         Int

  @@id([componentId, tagId])
}